1，什么是服务治理
    Spring Cloud 封装了 Netflix 公司开发的 Eureka 模块来实现服务治理。
    在传统的rpc远程调用框架中，管理每个服务与服务之间依赖关系比较复杂。所以需要使用服务治理，来管理服务与服务
    之间的依赖关系，可以实现服务调用、负载均衡、容错等，实现服务注册与服务发现。

2，Eureka 能做什么？
    Eureka 采用了 CS 的设计架构，Erueka Server作为服务注册功能的服务端，它是服务注册中心。而系统中的其他微服务，使用
    Eureka 的客户端（每个微服务就是Eureka的客户端）连接到 Eureka Server 并维持心跳连接。这样系统的维护人员就可以通过
    Eureka server 来监控系统中各个微服务是否正常运行。

    eureka客户端 和 Eureka Server 之间会通过心跳来维持服务存活。心跳的默认周期是 30秒。
    如果Eureka Server 在”多个“心跳周期内（默认是90秒）没有收到该节点的心跳，将会将该服务从服务注册表中移除。

    当微服务启动时，会把当前自己服务器的信息如IP、服务名等信息注册到 Eureka 注册中心上。当另一个微服务需要调用某个服务时，就会
    使用希望调用的”服务别名“去注册中心上找到对应服务的信息，获取到后（会获取到ip地址信息等），再通过本地RPC调用对应的服务。

3，Eureka Server 模块搭建步骤
1，新建模块cloud-eureka-server7001
2，修改pom，引入eureka 服务端的依赖
3，新增主启动类，修改yml文件
4，使用@EnableEurekaServer 注解标注主启动类
5，执行著启动类，并访问 http://localhost:7001
6，修改eureka客户端（需要注册eureka server端的微服务），
   配置pom.xml （增加eureka客户端的依赖）、
   增加@EnableEurekaClient、
   修改yml文件配置eureka 客户端的信息
7，重新启动eureka客户端。

注意：
1，默认情况下，eureka 客户端的 spring.application.name 的值的大写就是eureka服务端管理界面上的 application 的值
spring:
  application:
    name: cloud-payment-service

2，Eureka rpc 注册调用流程
1，先启动 eureka server 端
2，启动各微服务（erueka 客户端），这些微服务启动后会把自身信息注册进 eruieka 服务端。
3，消费者端在调用另一个微服务时，使用服务别名去注册中心获取实际的RPC远程调用地址。
4，消费者获得调用地址后，底层实际时利用 httpClient技术实现远程调用。
5，消费者端获取到服务地址后会缓存在本地jvm内存中，默认每隔30秒更新一次服务调用地址。
