1，几乎所有的微服务架构都需要“服务网关”，让他挡在前面进行“日志”，“限流”，“权限”，“安全加固”等等工作，比如医院的分诊台。
2，zuul 和 gateway，我们现在使用 gateway了。
  zuul 是netfix 公司开发的，本来公司要升级换代成 zuul2 的，但是做zuul的核心人员掏槽了，以及zuul2本身内部分歧，导致
  一致没有推出，所以spring自己开发了一套 gateway 来做网关。


3，Zuul 1.x 是基于阻塞 I/O 的 网关。
  Zuul 1.x 基于Servlet2.5使用阻塞架构，它不支持任何长连接（如WebSocket），Zuul的涉及模式和Nginx很像，每次I/O操作
  都是从工作线程中选择一个执行，请求线程被阻塞到工作线程完成，但是差别是Nginx用c++实现，zuul用java实现，而JVM本身会有
  第一次加载较慢的情况，使得zuul性能相对较差。

  什么是Servlet2.5的阻塞架构？
    答：tomcat容器接收到请求后，会为每个请求分配一个线程（一般从线程池中获取空闲线程），然后调用service()
    即当有：请求1，请求2，请求3，... 请求n 进入tomcat容器时，每个请求都会从线程池中绑定一个空闲线程执行。
    在并发不高的情况下，还是可以应付的。但是当有高并发时，线程资源就不够了，且线程切换也耗费资源，这时候后来的
    的请求就会等待（新的请求就会等待，直到有工作线程释放）。

    在servlet3.1之后有了“异步非阻塞”的支持。


4，zuul 2.x理念更先进，想基于Netty非阻塞和支持长连接，但SpringCloud目前还没有整合。Zuul2.x的性能比zuul1.x有较大
   的提升，性能方面，根据赶赴昂提供的基准测试，Spring Cloud Gateway的RPS（每秒请求数）是Zuul 的1.6背。

